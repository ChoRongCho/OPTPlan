
Description:
Goal-State by rule
rule0: None
rule1: None (it indicates the order of the action => dose not affect the goal state)
rule2: foldable object => folded
rule3 & rule4: soft object => pushed

Goal-State by instructions
goal1: packing all objects
goal2: black object: don't pack

From a given init state and rules, we can define the goal state of the task.

Table
|---------------------------------Goal-State---------------------------------|
| item    | name          | in_bin | out_bin | foldable_folded | soft_pushed |
|----------------------------------------------------------------------------|
| bin1    | white box     | None   | None    | None            | None        |
| object2 | yellow object | True   | False   | True            | False       |
| object3 | black object  | False  | True    | False           | False       |
| object4 | brown object  | True   | False   | False           | False       |
| object5 | blue object   | True   | False   | False           | False       |
|----------------------------------------------------------------------------|













|------------------------------------Init-State------------------------------------|
| item    | name          | in_bin | out_bin | is_soft | is_foldable | is_fragile |
|----------------------------------------------------------------------------------|
| object0 | yellow object | False  | True    | False   | False       | True       |
| bin1    | white box     | None   | None    | None    | None        | None       |
| object2 | black object  | True   | False   | False   | True        | True       |
| object3 | blue object   | False  | True    | False   | False       | True       |
|----------------------------------------------------------------------------------|

This is a initial state of bin_packing task.
We are now doing a bin_packing and our goal is listed below.

{'goal1': 'packing all objects into the bin', 'goal2': "if there is a black object, don't pack it into the box"}

And, this is rules that when you do actions.
{'rule0': 'you should never pick and place a box', 'rule1': 'when place a fragile objects, the soft objects must be in the bin', 'rule2': 'when fold a object, the object must be foldable', 'rule3': 'when push a object, neither fragile and rigid objects are permitted, but only soft objects are permitted', 'rule4': 'you must push a soft object to make more space in the bin, however, if there is a fragile object on the soft object, you must not push the object'}
Create and return a goal state of objects for bin_packing.


Description:
Goal-State by rule
rule0: None
rule1: None (it indicates the order of the action => dose not affect the goal state)
rule2: foldable object => folded
rule3 & rule4: soft object => pushed

Goal-State by instructions
goal1: packing all objects
goal2: black object: don't pack

From a given init state and rules, we can define the goal state of the task.

Table
|---------------------------------Goal-State---------------------------------|
| item    | name          | in_bin | out_bin | foldable_folded | soft_pushed |
|----------------------------------------------------------------------------|
| bin1    | white box     | None   | None    | None            | None        |
| object2 | yellow object | True   | False   | True            | False       |
| object3 | black object  | False  | True    | False           | False       |
| object4 | brown object  | True   | False   | False           | False       |
| object5 | blue object   | True   | False   | False           | False       |
|----------------------------------------------------------------------------|
